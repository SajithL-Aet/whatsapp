{"ast":null,"code":"import{applyMiddleware,createStore,compose}from\"redux\";import{persistStore,persistReducer}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";import createSagaMiddleware from\"redux-saga\";import rootReducer from\"./state\";import{watcherSaga}from\"./state/rootSaga\";import{RESET_STATE}from\"./state/user/types\";var initialState={};var persistConfig={key:\"persist-root\",storage:storage};var sagaMiddleware=createSagaMiddleware();var middleware=[sagaMiddleware];/**\n * Clear store when user successfully signout from the app.\n */var reducer=function reducer(state,action){if(action.type!==RESET_STATE){return rootReducer(state,action);}else{return rootReducer(undefined,{});}};/**\n * Persist state in local storage.\n */var persistedReducer=persistReducer(persistConfig,reducer);var store=createStore(persistedReducer,initialState,compose(applyMiddleware.apply(void 0,middleware),window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__()));var persistor=persistStore(store);sagaMiddleware.run(watcherSaga);export default store;export{persistor};","map":{"version":3,"names":["applyMiddleware","createStore","compose","persistStore","persistReducer","storage","createSagaMiddleware","rootReducer","watcherSaga","RESET_STATE","initialState","persistConfig","key","sagaMiddleware","middleware","reducer","state","action","type","undefined","persistedReducer","store","apply","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","run"],"sources":["/Users/sajithliyanage/Documents/what/whatsapp/src/store.js"],"sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./state\";\nimport { watcherSaga } from \"./state/rootSaga\";\nimport { RESET_STATE } from \"./state/user/types\";\n\nconst initialState = {};\n\nconst persistConfig = {\n\tkey: \"persist-root\",\n\tstorage: storage\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\n/**\n * Clear store when user successfully signout from the app.\n */\nconst reducer = (state, action) => {\n\tif (action.type !== RESET_STATE) {\n\t\treturn rootReducer(state, action);\n\t} else {\n\t\treturn rootReducer(undefined, {});\n\t}\n};\n\n/**\n * Persist state in local storage.\n */\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = createStore(\n\tpersistedReducer,\n\tinitialState,\n\tcompose(\n\t\tapplyMiddleware(...middleware),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t)\n);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(watcherSaga);\nexport default store;\nexport { persistor };\n"],"mappings":"AAAA,OAASA,eAAe,CAAEC,WAAW,CAAEC,OAAO,KAAQ,OAAO,CAC7D,OAASC,YAAY,CAAEC,cAAc,KAAQ,eAAe,CAC5D,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAC/C,MAAO,CAAAC,oBAAoB,KAAM,YAAY,CAE7C,MAAO,CAAAC,WAAW,KAAM,SAAS,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,WAAW,KAAQ,oBAAoB,CAEhD,GAAM,CAAAC,YAAY,CAAG,CAAC,CAAC,CAEvB,GAAM,CAAAC,aAAa,CAAG,CACrBC,GAAG,CAAE,cAAc,CACnBP,OAAO,CAAEA,OACV,CAAC,CAED,GAAM,CAAAQ,cAAc,CAAGP,oBAAoB,CAAC,CAAC,CAE7C,GAAM,CAAAQ,UAAU,CAAG,CAACD,cAAc,CAAC,CAEnC;AACA;AACA,GACA,GAAM,CAAAE,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,KAAK,CAAEC,MAAM,CAAK,CAClC,GAAIA,MAAM,CAACC,IAAI,GAAKT,WAAW,CAAE,CAChC,MAAO,CAAAF,WAAW,CAACS,KAAK,CAAEC,MAAM,CAAC,CAClC,CAAC,IAAM,CACN,MAAO,CAAAV,WAAW,CAACY,SAAS,CAAE,CAAC,CAAC,CAAC,CAClC,CACD,CAAC,CAED;AACA;AACA,GACA,GAAM,CAAAC,gBAAgB,CAAGhB,cAAc,CAACO,aAAa,CAAEI,OAAO,CAAC,CAE/D,GAAM,CAAAM,KAAK,CAAGpB,WAAW,CACxBmB,gBAAgB,CAChBV,YAAY,CACZR,OAAO,CACNF,eAAe,CAAAsB,KAAA,QAAIR,UAAU,CAAC,CAC9BS,MAAM,CAACC,4BAA4B,EAAID,MAAM,CAACC,4BAA4B,CAAC,CAC5E,CACD,CAAC,CACD,GAAM,CAAAC,SAAS,CAAGtB,YAAY,CAACkB,KAAK,CAAC,CAErCR,cAAc,CAACa,GAAG,CAAClB,WAAW,CAAC,CAC/B,cAAe,CAAAa,KAAK,CACpB,OAASI,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}